{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","clearInterval","name","props","console","info","toUTCString","slice","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","prevProps","prevState","debug","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,SAC1B,OAVP,kCAaE,WACEG,OAAOG,cAAcJ,KAAKD,WAd9B,oBAiBE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAQ,EAASL,KAAKM,MAAdD,KAIR,OAFAJ,OAAOM,QAAQC,KAAKX,EAAMY,cAAcC,OAAO,IAAK,IAGlD,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,IAGF,YAED,sBAAMM,UAAU,cAAhB,SACGd,EAAMY,cAAcC,OAAO,IAAK,YAhC3C,GAA2BE,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBK,GAUX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,UAAU,EACVC,UAAW,WAHf,EAMErB,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBsB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEgB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEgB,UAAU,OAG5BnB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEiB,UAAWN,QAC1B,QApBP,gCAuBE,SACEW,EAA4BC,GAExBD,GAAaC,EAAUN,YAAcpB,KAAKJ,MAAMwB,WAClDnB,OAAOM,QAAQoB,MAAf,uBAAqCD,EAAUN,UAA/C,gBAAgEpB,KAAKJ,MAAMwB,cA3BjF,oBA+BE,WACE,MAAgCpB,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOd,KAAMe,WAtClC,GAAyBR,IAAMC,WCd/Be,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.4b796fe1.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  today: Date\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    window.console.info(today.toUTCString().slice(-12, -4));\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>, prevState: Readonly<State>,\n  ): void {\n    if (prevProps && prevState.clockName !== this.state.clockName) {\n      window.console.debug(`Renamed from ${prevState.clockName}  to ${this.state.clockName}`);\n    }\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}